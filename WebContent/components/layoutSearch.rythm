@// import used views
@import org.skycrawl.search.core.templating.views.search.*

@// declare template arguments
@args SearchView view, String pageTitle

@// this layout extends the main layout
@extends(components.layout, pageTitle, "css/search.css")

@*
	Body of this template. Only values from "view" (constructed from servlet parameters) need to be escaped.
*@
@// first some information
<h2>Malicious search terms:</h2>
<div class="vulnerability">
	<p><b>Reflected XSS to inject tags:</b></p>
	<pre>&quot;&gt;&lt;script&gt;alert(42)&lt;/script&gt;</pre>
	<p>Mitigated by server-side HTML-escaping, unless the attacker performs a MitM attack. Open <a href="./settings">settings</a> and enable it.</p>
</div>
<div class="vulnerability">
	<p><b>Reflected XSS to inject attributes:</b></p>
	<pre>" onload="alert(42)"</pre>
	<p>Mitigated by server-side HTML-escaping, unless the attacker performs a MitM attack. Open <a href="./settings">settings</a> and enable it.</p>
</div>

<h2>Search:</h2>
<datalist id="search-colors">
   	<option value="red">Color - red</option>
   	<option value="black">Color - black</option>
   	<option value="blue">Color - blue</option>
   	<option value="white">Color - white</option>
   	<option value="green">Color - green</option>
   	<option value="yellow">Color - yellow</option>
</datalist>

@// include the main search form or GUI
@render("searchForm")

@// include a field with escaped search term
<h2>When escaped (<a href="https://github.com/chrisisbeef/jquery-encoder">JQuery Encoder</a>):</h2>
@if(view.getSearchTerm())
{
	<input id="search-field-escaped" type="search" value="@_forceEscapeAsAttr(view.getSearchTerm())" readonly />
}
else
{
	<input id="search-field-escaped" type="search" readonly />
}

@// bind the above form and field
<script type="text/javascript">
	var escapeField = $("#search-field-escaped");

	// bind '#search-field' with '#search-field-escaped'
	$("#search-field").on("input", function()
	{
    	escapeField.removeAttr("readonly");
    	escapeField.val($.encoder.encodeForHTMLAttribute(undefined, $(this).val(), true));
    	escapeField.attr("readonly", "true");
	});
</script>

@// render layout
@render() @// or doLayout()
