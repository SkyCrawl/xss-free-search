@// import used views
@import org.skycrawl.search.core.templating.views.search.*

@// declare template arguments
@args SearchView view

@// include escaping routines
@include("escaping.rythm")

@*
	Body of this template.
*@
<h2 id="search-examples">Malicious search terms:</h2>
<div class="vulnerability">
	<p><b>Reflected XSS to inject tags:</b></p>
	<pre>&quot;&gt;&lt;script&gt;alert(42)&lt;/script&gt;</pre>
	<p>Mitigated by server-side HTML-escaping, unless the attacker performs a MitM attack. Open <a href="./settings">settings</a> and enable it.</p>
</div>
<div class="vulnerability">
	<p><b>Reflected XSS to inject attributes:</b></p>
	<pre>" onload="alert(42)"</pre>
	<p>Mitigated by server-side HTML-escaping, unless the attacker performs a MitM attack. Open <a href="./settings">settings</a> and enable it.</p>
</div>

<h2 id="search-section">Search:</h2>
<datalist id="search-colors">
   	<option value="red">Color - red</option>
   	<option value="black">Color - black</option>
   	<option value="blue">Color - blue</option>
   	<option value="white">Color - white</option>
   	<option value="green">Color - green</option>
   	<option value="yellow">Color - yellow</option>
</datalist>

@renderBody()<br/>
@if(view.getSearchTerm())
{
	When escaped: <input id="search-field-escaped" type="text" value="@_forceEscapeAsAttr(view.getSearchTerm())" readonly />
}
else
{
	When escaped: <input id="search-field-escaped" type="text" readonly />
}

<script type="text/javascript">
	$("#search-field").on("input", function()
	{
		if(timer !== undefined)
		{
			console.log("Clearing timer...");
			clearTimeout(timer);
		}
		console.log("Settings timer...");
		timer = setTimeout(callEscapeServiceAndUpdate(), 3000);
	});
	
	function callEscapeServiceAndUpdate()
	{
		timer = undefined;
		$.ajax({
	        method: "GET",
	        // contentType: "text/plain; charset=UTF-8",
	        // accepts: "text/plain; charset=UTF-8", // don't use - causes "Accept: undefined" ...
	        headers:
	        {
	        	"Content-Type": "text/plain; charset=UTF-8",
	        	"Accept": "text/plain; charset=UTF-8"
	        },
	        url: "./services/escape/htmlAttr/" + encodeURIComponent($("#search-field").val()),
	        success: function(data, textStatus, jqXHR)
	        {
	        	updateEscapeField(data);
	        },
	        error: function(jqXHR, textStatus, errorThrown)
	        {
	        	updateEscapeField(textStatus + ": " + errorThrown);
	        }
	    });
	}
	
	function updateEscapeField(value)
	{
		var escapeField = $("#search-field-escaped");
    	escapeField.removeAttr("readonly");
    	escapeField.val(value);
    	escapeField.attr("readonly", "true");
	}
</script>
